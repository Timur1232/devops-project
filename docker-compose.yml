version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRS_DB: postgres
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  zitadel:
    image: ghcr.io/zitadel/zitadel:latest
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./zitadel:/zitadel
    command: start-from-init --config /zitadel/config.yaml
    environment:
      ZITADEL_MASTERKEY: "qwertyuiopasdfghjklzxcvbnm123456"
    networks:
      - backend

  nocodb:
    image: nocodb/nocodb:latest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NC_DB: "pg://postgres:5432?u=admin&p=admin_postgres&d=nocodb"
    networks:
      - backend

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etx/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - zitadel
      - nocodb
    networks:
      - backend

networks:
  backend:
    driver: bridge
