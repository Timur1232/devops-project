version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  zitadel:
    image: 'ghcr.io/zitadel/zitadel:latest'
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./zitadel:/zitadel
    command: 'start-from-init --masterkey "ExrDvBB9r0IA6L2NqprYmcUXIxJE/5VT" --tlsMode disabled'
    environment:
      ZITADEL_EXTERNAL_DOMAIN: localhost
      ZITADEL_EXTERNALPORT: 80
      ZITADEL_EXTERNALSECURE: false
      ZITADEL_EXTERNAL_ORIGIN: "http://localhost"
      ZITADEL_DATABASE_POSTGRES_HOST: postgres
      ZITADEL_DATABASE_POSTGRES_PORT: 5432
      ZITADEL_DATABASE_POSTGRES_DATABASE: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_USERNAME: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE: disable
      ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE: disable
    networks:
      - backend
    ports:
      - '8080:8080'

  nocodb:
    image: nocodb/nocodb:latest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NC_DB: "pg://postgres:5432?u=postgres&p=postgres&d=postgres"
      NC_PORT: 8080
      NC_BASE_URL: "/nocodb"
    networks:
      - backend
    ports:
      - "8081:8080"

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
        #- "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        #- ./nginx/certs:/etc/nginx/certs
    depends_on:
      - zitadel
      - nocodb
    networks:
      - backend

networks:
  backend:
    driver: bridge
